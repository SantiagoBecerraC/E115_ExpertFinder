name: Unit Tests Only

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install dependencies
      shell: bash -el {0}
      run: |
        cd backend
        pip install -r requirements-test.txt
        pip install -e .

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$GITHUB_WORKSPACE/backend" >> $GITHUB_ENV

    - name: Run unit tests
      shell: bash -el {0}
      run: |
        cd backend
        python -m pytest tests/unit/ -v --cov=. --cov-report=xml --cov-report=term-missing

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports
        path: backend/coverage.xml

  coverage-report:
    runs-on: ubuntu-latest
    needs: unit-tests
    if: always()

    steps:
    - uses: actions/checkout@v3

    - name: Download coverage artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-reports
        path: backend/reports

    - name: Parse coverage.xml and generate badge
      run: |
        python -m pip install coverage
        COVERAGE=$(python -c "
        import xml.etree.ElementTree as ET
        tree = ET.parse('backend/reports/coverage.xml')
        root = tree.getroot()
        coverage = float(root.attrib['line-rate']) * 100
        print(f'{coverage:.2f}')
        ")
        COLOR=$(python -c "
        coverage = float('$COVERAGE')
        if coverage >= 80:
            print('brightgreen')
        elif coverage >= 60:
            print('yellow')
        else:
            print('red')
        ")
        echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
        echo "color=$COLOR" >> $GITHUB_OUTPUT
